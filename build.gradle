
plugins {
  id 'java-library'
  id 'idea'
}

allprojects {
  group "com.carrotsearch.thirdparty"
  version = '2.7.2-SNAPSHOT'

  repositories {
    mavenCentral()
  }

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  dependencies {
    testImplementation "junit:junit:4.12"
    testImplementation "org.assertj:assertj-core:3.13.2"
  }

  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
  }

  tasks.withType(Jar) {
    manifest {
      attributes("Implementation-Title": project.name,
                 "Implementation-Version": "${project.version}")
    }
  }

  test {
    maxParallelForks = (int) Math.max(Runtime.runtime.availableProcessors() / 2.0, 4.0)
    systemProperty 'output', "${buildDir}/output"
  }

  javadoc {
    title = "${project.name} ${project.version} API Documentation"

    if (JavaVersion.current().isJava9Compatible()) {
      options.addBooleanOption('html5', true)
      options.addStringOption('Xdoclint:all,-missing', '-noindex')
    }

    options.encoding = 'UTF-8'
  }

  idea {
    module {
      outputDir file('build/idea/classes/main')
      testOutputDir file('build/idea/classes/test')
      downloadSources = true
    }

    project {
      jdkName = '8'
      languageLevel = '1.8'
    }
  }
}

allprojects {
  apply plugin: 'maven-publish'
  apply plugin: 'signing'

  task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
  }

  publishing {
    repositories {
      maven {
        name = 'sonatype'
        url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        credentials {
          if (project.hasProperty('nexusUsername')) {
            username project.nexusUsername
          }
          if (project.hasProperty('nexusPassword')) {
            password project.nexusPassword
          }
        }
      }
    }

    publications {
      maven(MavenPublication) {
        from components.java
        group = project.group
        artifactId = project.archivesBaseName

        artifact sourcesJar
        artifact javadocJar

        pom {
          name = "Simple XML (safe)"
          description = "A fork of Niall Gallagher's simple-xml library with web-safe defaults"
          url = 'https://github.com/dweiss/simplexml'
          inceptionYear = "2019"
          licenses {
            license {
              name = 'The Apache Software License, Version 2.0'
              url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
          organization {
            name = "Carrot Search s.c."
            url = "https://www.carrotsearch.com"
          }
          developers {
            developer {
              id = 'niallg'
              name = 'Niall Gallagher'
              email = 'niallg@users.sf.net'
            }
            developer {
              id = 'dawid.weiss'
              name = 'Dawid Weiss'
              email = 'dawid.weiss@carrotsearch.com'
            }
          }
          scm {
            connection = 'scm:git:git@github.com:dweiss/simplexml.git'
            developerConnection = 'scm:git:git@github.com:dweiss/simplexml.git'
            url = 'https://github.com/dweiss/simplexml'
          }
        }
      }
    }
  }

  signing {
    sign publishing.publications.maven
  }
}